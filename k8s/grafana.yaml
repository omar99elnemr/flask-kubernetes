apiVersion: v1
kind: ConfigMap
metadata:
  name: grafana-datasource-config
  namespace: omar-elnemr-helm-ns
  labels:
    app: grafana
    place: iti
    name: omar-elnemr
data:
  datasources.yml: |
    apiVersion: 1
    datasources:
      - name: Prometheus
        type: prometheus
        access: proxy
        url: http://prometheus-service:9090
        isDefault: true
        editable: true
---
apiVersion: v1
kind: ConfigMap
metadata:
  name: grafana-dashboard-provider-config
  namespace: omar-elnemr-helm-ns
  labels:
    app: grafana
    place: iti
    name: omar-elnemr
data:
  dashboards.yml: |
    apiVersion: 1
    providers:
      - name: 'default'
        orgId: 1
        folder: ''
        type: file
        disableDeletion: false
        updateIntervalSeconds: 10
        options:
          path: /var/lib/grafana/dashboards
---
apiVersion: v1
kind: ConfigMap
metadata:
  name: grafana-dashboard-config
  namespace: omar-elnemr-helm-ns
  labels:
    app: grafana
    place: iti
    name: omar-elnemr
data:
  flask-app-dashboard.json: |
    {
      "dashboard": {
        "id": null,
        "title": "Omar ElNemr Flask App Monitoring",
        "tags": ["flask", "omar-elnemr", "iti"],
        "style": "dark",
        "timezone": "browser",
        "panels": [
          {
            "id": 1,
            "title": "Request Rate",
            "type": "stat",
            "targets": [
              {
                "expr": "rate(flask_app_requests_total[5m])",
                "legendFormat": "Requests per second"
              }
            ],
            "fieldConfig": {
              "defaults": {
                "color": {
                  "mode": "palette-classic"
                },
                "unit": "reqps"
              }
            },
            "gridPos": {
              "h": 8,
              "w": 12,
              "x": 0,
              "y": 0
            }
          },
          {
            "id": 2,
            "title": "Response Time",
            "type": "stat",
            "targets": [
              {
                "expr": "histogram_quantile(0.95, rate(flask_app_request_duration_seconds_bucket[5m]))",
                "legendFormat": "95th percentile"
              }
            ],
            "fieldConfig": {
              "defaults": {
                "color": {
                  "mode": "palette-classic"
                },
                "unit": "s"
              }
            },
            "gridPos": {
              "h": 8,
              "w": 12,
              "x": 12,
              "y": 0
            }
          },
          {
            "id": 3,
            "title": "Task Operations",
            "type": "stat",
            "targets": [
              {
                "expr": "increase(flask_app_task_operations_total[1h])",
                "legendFormat": "{{operation}}"
              }
            ],
            "fieldConfig": {
              "defaults": {
                "color": {
                  "mode": "palette-classic"
                },
                "unit": "short"
              }
            },
            "gridPos": {
              "h": 8,
              "w": 24,
              "x": 0,
              "y": 8
            }
          }
        ],
        "time": {
          "from": "now-1h",
          "to": "now"
        },
        "refresh": "5s"
      }
    }
---
apiVersion: apps/v1
kind: Deployment
metadata:
  name: grafana-deployment
  namespace: omar-elnemr-helm-ns
  labels:
    app: grafana
    place: iti
    name: omar-elnemr
spec:
  replicas: 1
  selector:
    matchLabels:
      app: grafana
  template:
    metadata:
      labels:
        app: grafana
        place: iti
        name: omar-elnemr
    spec:
      containers:
      - name: grafana
        image: grafana/grafana:10.2.0
        ports:
        - containerPort: 3000
        resources:
          limits:
            memory: "256Mi"
            cpu: "200m"
          requests:
            memory: "128Mi"
            cpu: "100m"
        env:
        - name: GF_SECURITY_ADMIN_PASSWORD
          value: admin123
        - name: GF_INSTALL_PLUGINS
          value: "grafana-piechart-panel"
        volumeMounts:
        - name: grafana-dashboards
          mountPath: /var/lib/grafana/dashboards
        - name: grafana-datasources
          mountPath: /etc/grafana/provisioning/datasources
        - name: grafana-dashboard-providers
          mountPath: /etc/grafana/provisioning/dashboards
      volumes:
      - name: grafana-dashboards
        configMap:
          name: grafana-dashboard-config
      - name: grafana-datasources
        configMap:
          name: grafana-datasource-config
      - name: grafana-dashboard-providers
        configMap:
          name: grafana-dashboard-provider-config
---
apiVersion: v1
kind: Service
metadata:
  name: grafana-service
  namespace: omar-elnemr-helm-ns
  labels:
    app: grafana
    place: iti
    name: omar-elnemr
spec:
  type: ClusterIP
  selector:
    app: grafana
  ports:
  - port: 3000
    targetPort: 3000
    name: grafana