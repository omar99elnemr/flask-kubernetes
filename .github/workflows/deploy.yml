name: helm-workflow


on:
  workflow_dispatch:
#   push:
#     branches:
#       - main


jobs:
#   unit-testing: … 
#   code-coverage: … 
#   docker: 
  docker-build:
    name: docker build
    runs-on: ubuntu-latest
    steps:
    - name: Checkout repository
      uses: actions/checkout@v4.2.2

    - name: Azure ACR Login
      uses: azure/docker-login@v1
      with:
        login-server: ${{ vars.ACR_LOGIN_SERVER }}
        username: ${{ vars.ACR_USERNAME }}
        password: ${{ secrets.ACR_PASSWORD }}
    - name: Build and Push Docker Image to ACR
      uses: docker/build-push-action@v4
      with:
        context: .
        push: true
        tags: ${{ vars.ACR_LOGIN_SERVER }}/omar-elnemr-flask-app:${{ github.sha }}
  helm-deploy:
    name: Deploy with Helm
    runs-on: ubuntu-latest
    needs: docker-build
    steps:
    - name: Checkout repository
      uses: actions/checkout@v4.2.2

    - name: Install Helm
      uses: azure/setup-helm@v3
      with:
        version: '3.12.0'

    - name: Install kubectl CLI
      uses: azure/setup-kubectl@v4.0.1
      with:
            version: 'latest'

    - name: Set Kubeconfig Context
      uses: azure/k8s-set-context@v4.0.1
      with:
        method: kubeconfig
        kubeconfig: ${{ secrets.KUBECONFIG }}

    - name: Fetch Kubernetes Cluster Details
      run: |
            kubectl version
            echo "-----------------------------------------"
            kubectl get nodes

    - name: Create namespace if not exists
      run: |
            kubectl create namespace omar-elnemr-helm-ns --dry-run=client -o yaml | kubectl apply -f -

    - name: Deploy with Helm
      run: |
            helm upgrade --install flask-app ./helm \
              --namespace omar-elnemr-helm-ns \
              --set image.repository=${{ vars.ACR_LOGIN_SERVER }}/omar-elnemr-flask-app \
              --set image.tag=${{ github.sha }} \
              --wait \
              --timeout=300s
              
    - name: Show Kubernetes resources
      run: |       
            kubectl get deployments -n omar-elnemr-helm-ns
            echo "-----------------------------------------"
            kubectl get pods -n omar-elnemr-helm-ns
            echo "-----------------------------------------"
            kubectl get services -n omar-elnemr-helm-ns
            echo "-----------------------------------------"